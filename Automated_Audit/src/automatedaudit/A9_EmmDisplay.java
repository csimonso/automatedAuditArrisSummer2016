/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package automatedaudit;

import java.awt.Color;

/**
 * Class to create a display to view the SEM EMM data.
 * 
 * @author Christopher Simonson
 * @version 1.0
 * @since 
 */
public class A9_EmmDisplay extends javax.swing.JDialog {

    /**
     * Creates new form EmmDisplay
     * @param parent The parent display
     */
    public A9_EmmDisplay(java.awt.Frame parent) {
        super(parent);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        dataPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        outputPidLabel = new javax.swing.JLabel();
        caSystemIdLabel = new javax.swing.JLabel();
        providerIdLabel = new javax.swing.JLabel();
        nameLabelInput = new javax.swing.JLabel();
        outputPidLabelInput = new javax.swing.JLabel();
        caSystemIdLabelInput = new javax.swing.JLabel();
        providerIdLabelInput = new javax.swing.JLabel();
        consumerStreamLabel = new javax.swing.JLabel();
        consumerStreamLabelInput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        closeButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        dataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EMM Data", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name:");

        outputPidLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        outputPidLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        outputPidLabel.setText("Output PID:");

        caSystemIdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        caSystemIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        caSystemIdLabel.setText("Ca Sys. ID:");

        providerIdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        providerIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        providerIdLabel.setText("Provider ID:");

        nameLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nameLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nameLabelInput.setText("Name");

        outputPidLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        outputPidLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        outputPidLabelInput.setText("Output PID");

        caSystemIdLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        caSystemIdLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        caSystemIdLabelInput.setText("Ca Sys. ID");

        providerIdLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        providerIdLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        providerIdLabelInput.setText("Provider ID");

        consumerStreamLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        consumerStreamLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        consumerStreamLabel.setText("Consumer Stream:");

        consumerStreamLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        consumerStreamLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        consumerStreamLabelInput.setText("True/False");

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(consumerStreamLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(providerIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputPidLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(caSystemIdLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(caSystemIdLabelInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outputPidLabelInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(nameLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(providerIdLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(consumerStreamLabelInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputPidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputPidLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caSystemIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(caSystemIdLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(providerIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(providerIdLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consumerStreamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(consumerStreamLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(281, 283));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        /* Closes the dialog box when pressed */
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    /**
     * Method to run the display
     */
    public void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(A9_EmmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(A9_EmmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(A9_EmmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(A9_EmmDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            A9_EmmDisplay dialog = new A9_EmmDisplay(new javax.swing.JFrame());
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(false);
        });
    }
    /**
     * Method to make display visible
     */
    public void runEmmDisplay(){
        this.setVisible(true);
    }
    
    /**
     * EMM Name Label Setter.
     * @param name The EMM Name
     */
    public void setNameLabel(String name){
        nameLabelInput.setText(name);    
    }
    
    /**
     * EMM Output PID Label Setter.
     * @param outputPid The EMM Output PID
     */
    public void setOutputPidLabel(String outputPid){
        outputPidLabelInput.setText(outputPid);
    }
    
    /**
     * EMM CA System ID Label Setter.
     * @param caSystemId The EMM CA System ID
     */
    public void setCaSystemIdLabel(String caSystemId){
        caSystemIdLabelInput.setText(caSystemId);
    }
    
    /**
     * EMM Provider ID Label Setter.
     * @param providerId The EMM Provider ID
     */
    public void setProviderIdLabel(String providerId){
        providerIdLabelInput.setText(providerId);
    }
    
    /**
     * EMM Consumer Stream Label Setter.
     * @param consumerStream The EMM Consumer Stream
     */
    public void setConsumerStreamLabel(String consumerStream){
        consumerStreamLabelInput.setText(consumerStream);
        /* Sets font color to red if off and green if on */
        if(consumerStream.equals("true")){
             consumerStreamLabelInput.setForeground(Color.green);
        }
        else {
             consumerStreamLabelInput.setForeground(Color.red);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel caSystemIdLabel;
    private javax.swing.JLabel caSystemIdLabelInput;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel consumerStreamLabel;
    private javax.swing.JLabel consumerStreamLabelInput;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabelInput;
    private javax.swing.JLabel outputPidLabel;
    private javax.swing.JLabel outputPidLabelInput;
    private javax.swing.JLabel providerIdLabel;
    private javax.swing.JLabel providerIdLabelInput;
    // End of variables declaration//GEN-END:variables
}
