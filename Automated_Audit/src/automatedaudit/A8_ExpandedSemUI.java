/*
 * Copyright (C) ARRIS Solutions Inc. - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Christopher Simonson <chris.simonson@arris.com>, July 2016
 */
package automatedaudit;

import java.awt.Color;
import java.util.ArrayList;

/**
 * Class to create a display to view the expanded SEM data.
 * 
 * @author Christopher Simonson
 * @version 1.0
 * @since 
 */
public class A8_ExpandedSemUI extends javax.swing.JFrame {

    private A6_InitialDataDisplayGUI prevDisplay;
       
    /**
     * Creates new form ExpandedSemUI
     */
    public A8_ExpandedSemUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        roleLabel = new javax.swing.JLabel();
        redundancyGroupLabel = new javax.swing.JLabel();
        versionLabel = new javax.swing.JLabel();
        opModeLabel = new javax.swing.JLabel();
        bootLabel = new javax.swing.JLabel();
        autoBootLabel = new javax.swing.JLabel();
        multiControllerLabel = new javax.swing.JLabel();
        controllerPortLabel = new javax.swing.JLabel();
        semPortLabel = new javax.swing.JLabel();
        roleLabelInput = new javax.swing.JLabel();
        redundancyGroupLabelInput = new javax.swing.JLabel();
        versionLabelInput = new javax.swing.JLabel();
        opModeLabelInput = new javax.swing.JLabel();
        bootLabelInput = new javax.swing.JLabel();
        autoBootLabelInput = new javax.swing.JLabel();
        multiControllerLabelInput = new javax.swing.JLabel();
        controllerPortLabelInput = new javax.swing.JLabel();
        semPortLabelInput = new javax.swing.JLabel();
        commandTimeoutLabel = new javax.swing.JLabel();
        dectectPsiLossLabel = new javax.swing.JLabel();
        encryptionAlgorithmLabel = new javax.swing.JLabel();
        commandTimeoutLabelInput = new javax.swing.JLabel();
        detectPsiLossLabelInput = new javax.swing.JLabel();
        encryptionAlgorithmLabelInput = new javax.swing.JLabel();
        pidRemappingLabel = new javax.swing.JLabel();
        copyProtectionSourceLabel = new javax.swing.JLabel();
        gpsOffsetLabel = new javax.swing.JLabel();
        messageInsertModeLabel = new javax.swing.JLabel();
        timeSourceLabel = new javax.swing.JLabel();
        asiTransportIndexLabel = new javax.swing.JLabel();
        highSpeedLabel = new javax.swing.JLabel();
        inputFailureAlarmLabel = new javax.swing.JLabel();
        copyProtectionSourceLabelInput = new javax.swing.JLabel();
        pidRemappingLabelInput = new javax.swing.JLabel();
        messageInsertLabelInput = new javax.swing.JLabel();
        timeSourceLabelInput = new javax.swing.JLabel();
        gpsOffsetLabelInput = new javax.swing.JLabel();
        asiTransportIndexLabelInput = new javax.swing.JLabel();
        highSpeedLabelInput = new javax.swing.JLabel();
        inputFailureAlarmLabelInput = new javax.swing.JLabel();
        emmDataLabel = new javax.swing.JLabel();
        dectectPsiLossLabel1 = new javax.swing.JLabel();
        encryptionAlgorithmLabel1 = new javax.swing.JLabel();
        commandTimeoutLabelInput1 = new javax.swing.JLabel();
        detectPsiLossLabelInput1 = new javax.swing.JLabel();
        encryptionAlgorithmLabelInput1 = new javax.swing.JLabel();
        clockRateDropDown = new javax.swing.JComboBox<>();
        clockRateLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        deviceLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        addressLabel = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();
        addressLabelInput = new javax.swing.JLabel();
        elementGroupLabel = new javax.swing.JLabel();
        elementGroupLabelInput = new javax.swing.JLabel();
        siteLabel = new javax.swing.JLabel();
        siteLabelInput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        roleLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        roleLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        roleLabel.setText("Role:");

        redundancyGroupLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        redundancyGroupLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        redundancyGroupLabel.setText("Redundancy Group:");

        versionLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        versionLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        versionLabel.setText("Version:");

        opModeLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        opModeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        opModeLabel.setText("Op. Mode:");

        bootLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bootLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bootLabel.setText("Boot Method:");

        autoBootLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        autoBootLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        autoBootLabel.setText("Auto Boot:");

        multiControllerLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        multiControllerLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        multiControllerLabel.setText("Multi-Controller:");

        controllerPortLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        controllerPortLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        controllerPortLabel.setText("Controller Port:");

        semPortLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semPortLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        semPortLabel.setText("SEM Port:");

        roleLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roleLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        roleLabelInput.setText("Primary/Secondary");
        roleLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        redundancyGroupLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        redundancyGroupLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        redundancyGroupLabelInput.setText("Group Name");
        redundancyGroupLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        versionLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        versionLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        versionLabelInput.setText("Host App Version");
        versionLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        opModeLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        opModeLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        opModeLabelInput.setText("Operating Mode");
        opModeLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        bootLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bootLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bootLabelInput.setText("Boot Method");
        bootLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        autoBootLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        autoBootLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        autoBootLabelInput.setText("True/False");
        autoBootLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        multiControllerLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        multiControllerLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        multiControllerLabelInput.setText("True/False");
        multiControllerLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        controllerPortLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        controllerPortLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        controllerPortLabelInput.setText("Port Number");
        controllerPortLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        semPortLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        semPortLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        semPortLabelInput.setText("Port Number");
        semPortLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        commandTimeoutLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        commandTimeoutLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        commandTimeoutLabel.setText("Command Timeout:");

        dectectPsiLossLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dectectPsiLossLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dectectPsiLossLabel.setText("Detect PSI Loss:");

        encryptionAlgorithmLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        encryptionAlgorithmLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        encryptionAlgorithmLabel.setText("Encryp. Algorithm:");

        commandTimeoutLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        commandTimeoutLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        commandTimeoutLabelInput.setText("Time");
        commandTimeoutLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        detectPsiLossLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        detectPsiLossLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        detectPsiLossLabelInput.setText("True/False");
        detectPsiLossLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        encryptionAlgorithmLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        encryptionAlgorithmLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        encryptionAlgorithmLabelInput.setText("Algorithm Type");
        encryptionAlgorithmLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        pidRemappingLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pidRemappingLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pidRemappingLabel.setText("PID Remapping:");

        copyProtectionSourceLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        copyProtectionSourceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        copyProtectionSourceLabel.setText("Copy Protection Src:");

        gpsOffsetLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gpsOffsetLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gpsOffsetLabel.setText("GPS UTC Offset:");

        messageInsertModeLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        messageInsertModeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        messageInsertModeLabel.setText("Message Insert Mode:");

        timeSourceLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        timeSourceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        timeSourceLabel.setText("Time Source:");

        asiTransportIndexLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        asiTransportIndexLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        asiTransportIndexLabel.setText("ASI Monitor Trans. Idx:");

        highSpeedLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        highSpeedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        highSpeedLabel.setText("HighSpeed Mode:");

        inputFailureAlarmLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        inputFailureAlarmLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        inputFailureAlarmLabel.setText("Input Failure Alarm:");

        copyProtectionSourceLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        copyProtectionSourceLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        copyProtectionSourceLabelInput.setText("Source");
        copyProtectionSourceLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        pidRemappingLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pidRemappingLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pidRemappingLabelInput.setText("True/False");
        pidRemappingLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        messageInsertLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        messageInsertLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        messageInsertLabelInput.setText("Mode");
        messageInsertLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        timeSourceLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        timeSourceLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        timeSourceLabelInput.setText("Source");
        timeSourceLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        gpsOffsetLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        gpsOffsetLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gpsOffsetLabelInput.setText("Offset Number");
        gpsOffsetLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        asiTransportIndexLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        asiTransportIndexLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        asiTransportIndexLabelInput.setText("Index Number");
        asiTransportIndexLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        highSpeedLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        highSpeedLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        highSpeedLabelInput.setText("True/False");
        highSpeedLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        inputFailureAlarmLabelInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inputFailureAlarmLabelInput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        inputFailureAlarmLabelInput.setText("True/False");
        inputFailureAlarmLabelInput.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        emmDataLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        emmDataLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emmDataLabel.setText("EMM Data");

        dectectPsiLossLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dectectPsiLossLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dectectPsiLossLabel1.setText("EMPTY");

        encryptionAlgorithmLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        encryptionAlgorithmLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        encryptionAlgorithmLabel1.setText("EMPTY");

        commandTimeoutLabelInput1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        commandTimeoutLabelInput1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        commandTimeoutLabelInput1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        detectPsiLossLabelInput1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        detectPsiLossLabelInput1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        detectPsiLossLabelInput1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        encryptionAlgorithmLabelInput1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        encryptionAlgorithmLabelInput1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        encryptionAlgorithmLabelInput1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        clockRateDropDown.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        clockRateDropDown.setMaximumRowCount(0);

        clockRateLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clockRateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        clockRateLabel.setText("Clock Rate:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(redundancyGroupLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(versionLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(opModeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bootLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(autoBootLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(multiControllerLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(controllerPortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(controllerPortLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(autoBootLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roleLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(redundancyGroupLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(versionLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(opModeLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bootLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(multiControllerLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dectectPsiLossLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(commandTimeoutLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(semPortLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(encryptionAlgorithmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(encryptionAlgorithmLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(commandTimeoutLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(semPortLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(detectPsiLossLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emmDataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(dectectPsiLossLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(encryptionAlgorithmLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(commandTimeoutLabelInput1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(detectPsiLossLabelInput1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(encryptionAlgorithmLabelInput1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pidRemappingLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(copyProtectionSourceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(gpsOffsetLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(messageInsertModeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeSourceLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(asiTransportIndexLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(highSpeedLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputFailureAlarmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clockRateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(copyProtectionSourceLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pidRemappingLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(messageInsertLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeSourceLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(gpsOffsetLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(asiTransportIndexLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(highSpeedLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputFailureAlarmLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clockRateDropDown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(copyProtectionSourceLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(copyProtectionSourceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(pidRemappingLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(pidRemappingLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(messageInsertModeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(messageInsertLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(timeSourceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(timeSourceLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(gpsOffsetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(gpsOffsetLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(asiTransportIndexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(asiTransportIndexLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(highSpeedLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(highSpeedLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputFailureAlarmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputFailureAlarmLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockRateDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clockRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emmDataLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(commandTimeoutLabelInput1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dectectPsiLossLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(detectPsiLossLabelInput1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(encryptionAlgorithmLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(encryptionAlgorithmLabelInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                    .addComponent(roleLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(roleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(redundancyGroupLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(redundancyGroupLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(versionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(versionLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(opModeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(opModeLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(bootLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(bootLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(autoBootLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(autoBootLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(multiControllerLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(multiControllerLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(controllerPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(controllerPortLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(semPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(semPortLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(commandTimeoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(commandTimeoutLabelInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dectectPsiLossLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(detectPsiLossLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(encryptionAlgorithmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(encryptionAlgorithmLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        deviceLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deviceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deviceLabel.setText("DEVICE");

        exitButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        addressLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressLabel.setText("IP Address:");
        addressLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        printButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        addressLabelInput.setText("Ip address");

        elementGroupLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        elementGroupLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        elementGroupLabel.setText("Element Group:");
        elementGroupLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        elementGroupLabelInput.setText("Element Group");

        siteLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        siteLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        siteLabel.setText("Site:");
        siteLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        siteLabelInput.setText("Site");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(194, 194, 194)
                                .addComponent(siteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(siteLabelInput, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deviceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(elementGroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elementGroupLabelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deviceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabelInput)
                    .addComponent(elementGroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elementGroupLabelInput)
                    .addComponent(siteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(siteLabelInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.goBack(prevDisplay);
    }//GEN-LAST:event_backButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed

        
    }//GEN-LAST:event_printButtonActionPerformed

    /**
     * Method to run the display.
     */
    public void runProgram() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(A8_ExpandedSemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(A8_ExpandedSemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(A8_ExpandedSemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(A8_ExpandedSemUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new A8_ExpandedSemUI().setVisible(true);
        });
    }

    /**
     * Method to bring up the last display.
     * @param prevDisplay The last display
     */
    private void goBack(A6_InitialDataDisplayGUI prevDisplay){
        /* Make previous display visible */
        prevDisplay.setVisible(true);
        /* Make current display invisible */
        this.setVisible(false);  
    }
    
    /**
     * Previous Display Setter.
     * @param pDisplay The Previous Display
     */
    public void setPrevDisplay(A6_InitialDataDisplayGUI pDisplay) {
        prevDisplay = pDisplay;
    }
    /**
     * Device Label Setter.
     * @param device The Device
     */
    public void setDeviceLabel(String device){
        deviceLabel.setText(device);
    }
    /**
     * Device Element Group Label Setter.
     * @param elementGroup The Device Element Group
     */
    public void setElementGroupLabel(String elementGroup){
        elementGroupLabelInput.setText(elementGroup);
    }
    /**
     * Device Site Label Setter.
     * @param site The Device Site
     */
    public void setSiteLabel(String site){
        siteLabelInput.setText(site);
    }
    /**
     * Device Role Label Setter
     * @param role The Device Role
     */
    public void setRoleLabel(String role){
        roleLabelInput.setText(role);
    }
    /**
     * Device Redundancy Group Label Setter.
     * @param redundancyGroup The Device Redundancy Group
     */
    public void setRedundancyGroupLabel(String redundancyGroup){
        redundancyGroupLabelInput.setText(redundancyGroup);
    }
    /**
     * Device IP Address Label Setter.
     * @param address The device IP Address
     */
    public void setAddressLabel(String address){
        addressLabelInput.setText(address);
    }
    /**
     * Device APP Version Label Setter.
     * @param version The Device APP Version
     */
    public void setVersionLabel(String version){
        versionLabelInput.setText(version);
    }
    /**
     * Device Operating Mode Label Setter.
     * @param opMode The Device Operating Mode
     */
    public void setOpModeLabel(String opMode){
        opModeLabelInput.setText(opMode);
    }
    /**
     * Device Boot Method Label Setter.
     * @param bootMethod The Device Boot Method
     */
    public void setBootMethodLabel(String bootMethod){
        bootLabelInput.setText(bootMethod);
    }
    /**
     * Device Controller Port Label Setter.
     * @param controllerPort The Device Controller Port
     */
    public void setControllerPortLabel(String controllerPort){
        controllerPortLabelInput.setText(controllerPort);
    }
    /**
     * Device SEM Port Label Setter.
     * @param semPort The Device SEM Port
     */
    public void setSemPortLabel(String semPort){
        semPortLabelInput.setText(semPort);
    }
    /**
     * Device Command Timeout Label Setter.
     * @param commandTimeout The Device Command Timeout
     */
    public void setCommandTimeoutLabel(String commandTimeout){
        commandTimeoutLabelInput.setText(commandTimeout);
    }
    /**
     * Device Encryption Algorithm Label Setter.
     * @param encryptionAlgorithm The Device Encryption Algorithm
     */
    public void setEncryptionAlgorithmLabel(String encryptionAlgorithm){
        encryptionAlgorithmLabelInput.setText(encryptionAlgorithm);
    }
    /**
     * Device Copy Protection Source Label Setter.
     * @param copyProtectionSource The Device Copy Protection Source
     */
    public void setCopyProtectionSourceLabel(String copyProtectionSource){
        copyProtectionSourceLabelInput.setText(copyProtectionSource);
    }
    /**
     * Device Message Insert Mode Label Setter.
     * @param messageInsertMode The Device Message Insert Mode
     */
    public void setMessageInsertModeLabel(String messageInsertMode){
        messageInsertLabelInput.setText(messageInsertMode);
    }
    /**
     * Device Time Source Label Setter.
     * @param timeSource The Device Time Source
     */
    public void setTimeSourceLabel(String timeSource){
        timeSourceLabelInput.setText(timeSource);
    }
    /**
     * Device GPS UTC Offset Label Setter.
     * @param gpsOffset The Device GPS UTC Offset
     */
    public void setGpsOffsetLabel(String gpsOffset){
        gpsOffsetLabelInput.setText(gpsOffset);
    }
    /**
     * Device ASI Transport Index Label Setter.
     * @param transportIndex The Device ASI Transport Index
     */
    public void setAsiTransportIndexLabel(String transportIndex){
        asiTransportIndexLabelInput.setText(transportIndex);
    }
    /**
     * Adds Clock Rates To The Clock Rate Dropdown Menu.
     * @param clockRate The Device Clock Rate List
     */
    public void setClockRateDropDown(ArrayList clockRate){
        /* Loops through list and adds each rate to drop down menu */
        for(int i = 0; i < clockRate.size(); i++){
           clockRateDropDown.addItem(clockRate.get(i).toString());
        }
    }
    /**
     * Device Input Failure Alarm Setter.
     * @param inputFailureAlarm The Device Input Failure Alarm
     */
    public void setInputFailureAlarmLabel(String inputFailureAlarm){
        /* Sets the label text */
        inputFailureAlarmLabelInput.setText(inputFailureAlarm);
        /* Sets font color to red if off and green if on */
        if(inputFailureAlarm.equals("true")){
            inputFailureAlarmLabelInput.setForeground(Color.green);
        }
        else {
            inputFailureAlarmLabelInput.setForeground(Color.red);
        }
    }
    /**
     * Device High Speed Label Setter.
     * @param highSpeed The Device High Speed Indication
     */
    public void setHighSpeedLabel(String highSpeed){
        /* Sets the label text */
        highSpeedLabelInput.setText(highSpeed);
        /* Sets font color to red if off and green if on */
        if(highSpeed.equals("true")){
            highSpeedLabelInput.setForeground(Color.green);
        }
        else {
            highSpeedLabelInput.setForeground(Color.red);
        }
    }
    /**
     * Device PID Re-mapping Label Setter.
     * @param pidRemapping The Device PID Re-mapping Indication
     */
    public void setPidRemappingLabel(String pidRemapping){
        /* Sets the label text */
        pidRemappingLabelInput.setText(pidRemapping);
        /* Sets font color to red if off and green if on */
        if(pidRemapping.equals("true")){
            pidRemappingLabelInput.setForeground(Color.green);
        }
        else {
            pidRemappingLabelInput.setForeground(Color.red);
        }
    }
    /**
     * Device Detect PSI Loss Label Setter.
     * @param psiLoss The Device Detect PSI Loss Indication
     */
    public void setDetectPsiLossLabel(String psiLoss){
        /* Sets the label text */
        detectPsiLossLabelInput.setText(psiLoss);
        /* Sets font color to red if off and green if on */
        if(psiLoss.equals("true")){
            detectPsiLossLabelInput.setForeground(Color.green);
        }
        else {
            detectPsiLossLabelInput.setForeground(Color.red);
        }
    }
    /**
     * Device Auto Boot Label Setter.
     * @param autoBoot The Device Auto Boot Indication
     */
    public void setAutoBootLabel(String autoBoot){
        /* Sets the label text */
        autoBootLabelInput.setText(autoBoot);
        /* Sets font color to red if off and green if on */
        if(autoBoot.equals("true")){
            autoBootLabelInput.setForeground(java.awt.Color.green);
        }
        else {
            autoBootLabelInput.setForeground(java.awt.Color.red);
        }
    }
    /**
     * Device Multi-Controller Label Setter.
     * @param multiController The Device Multi-Controller Indication
     */
    public void setMultiControllerLabel(String multiController){
        /* Sets the label text */
        multiControllerLabelInput.setText(multiController);
        /* Sets font color to red if off and green if on */
        if(multiController.equals("true")){
            multiControllerLabelInput.setForeground(Color.green);
        }
        else {
            multiControllerLabelInput.setForeground(Color.red);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel addressLabelInput;
    private javax.swing.JLabel asiTransportIndexLabel;
    private javax.swing.JLabel asiTransportIndexLabelInput;
    private javax.swing.JLabel autoBootLabel;
    private javax.swing.JLabel autoBootLabelInput;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel bootLabel;
    private javax.swing.JLabel bootLabelInput;
    private javax.swing.JComboBox<String> clockRateDropDown;
    private javax.swing.JLabel clockRateLabel;
    private javax.swing.JLabel commandTimeoutLabel;
    private javax.swing.JLabel commandTimeoutLabelInput;
    private javax.swing.JLabel commandTimeoutLabelInput1;
    private javax.swing.JLabel controllerPortLabel;
    private javax.swing.JLabel controllerPortLabelInput;
    private javax.swing.JLabel copyProtectionSourceLabel;
    private javax.swing.JLabel copyProtectionSourceLabelInput;
    private javax.swing.JLabel dectectPsiLossLabel;
    private javax.swing.JLabel dectectPsiLossLabel1;
    private javax.swing.JLabel detectPsiLossLabelInput;
    private javax.swing.JLabel detectPsiLossLabelInput1;
    private javax.swing.JLabel deviceLabel;
    private javax.swing.JLabel elementGroupLabel;
    private javax.swing.JLabel elementGroupLabelInput;
    private javax.swing.JLabel emmDataLabel;
    private javax.swing.JLabel encryptionAlgorithmLabel;
    private javax.swing.JLabel encryptionAlgorithmLabel1;
    private javax.swing.JLabel encryptionAlgorithmLabelInput;
    private javax.swing.JLabel encryptionAlgorithmLabelInput1;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel gpsOffsetLabel;
    private javax.swing.JLabel gpsOffsetLabelInput;
    private javax.swing.JLabel highSpeedLabel;
    private javax.swing.JLabel highSpeedLabelInput;
    private javax.swing.JLabel inputFailureAlarmLabel;
    private javax.swing.JLabel inputFailureAlarmLabelInput;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel messageInsertLabelInput;
    private javax.swing.JLabel messageInsertModeLabel;
    private javax.swing.JLabel multiControllerLabel;
    private javax.swing.JLabel multiControllerLabelInput;
    private javax.swing.JLabel opModeLabel;
    private javax.swing.JLabel opModeLabelInput;
    private javax.swing.JLabel pidRemappingLabel;
    private javax.swing.JLabel pidRemappingLabelInput;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel redundancyGroupLabel;
    private javax.swing.JLabel redundancyGroupLabelInput;
    private javax.swing.JLabel roleLabel;
    private javax.swing.JLabel roleLabelInput;
    private javax.swing.JLabel semPortLabel;
    private javax.swing.JLabel semPortLabelInput;
    private javax.swing.JLabel siteLabel;
    private javax.swing.JLabel siteLabelInput;
    private javax.swing.JLabel timeSourceLabel;
    private javax.swing.JLabel timeSourceLabelInput;
    private javax.swing.JLabel versionLabel;
    private javax.swing.JLabel versionLabelInput;
    // End of variables declaration//GEN-END:variables
}
